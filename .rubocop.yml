# See all descriptions at this link
# https://www.rubydoc.info/gems/rubocop/RuboCop

# Don't put ANY path-based include/exclude lines in this file!
# this is re-used by nested gems/engines, so it has to apply equally to
# any path. Exclusions for common filenames are okay, eg "**/Gemfile"

AllCops:
  TargetRubyVersion: 2.5
  # Enable new cops by default
  NewCops: enable
  SuggestExtensions: false
  # HACK: we ONLY want the parent rubocop to ignore these - the root folder is the
  # only spot where these paths will ever match.
  Exclude:
    - gems/**/*


require:
  - rubocop-performance
  - rubocop-rspec

# This is disabled it raises some errors while running.
# This might be Ruby version dependant though? Try to enable it again after next RuboCop
# upgrade (RuboCop >1.11.0, RuboCop.Rspec >2.2.0) and/or Ruby upgrade (>=2.7) and no errors.
RSpec/ScatteredLet:
  Enabled: false

# Indent private/protected/public as deep as method definitions
Layout/AccessModifierIndentation:
  Description: Check indentation of private/protected visibility modifiers.
  Enabled: true
  EnforcedStyle: indent

Naming/AccessorMethodName:
  Description: Check the naming of accessor methods for get_/set_.
  Enabled: false

Style/Alias:
  Description: "Use alias_method instead of alias."
  Enabled: true

Layout/ArrayAlignment:
  Description: >-
    Align the elements of an array literal if they span more than
    one line.
  Enabled: true

Layout/HashAlignment:
  Description: >-
    Align the elements of a hash literal if they span more than
    one line.
  Enabled: true
  EnforcedHashRocketStyle: key
  EnforcedLastArgumentHashStyle: always_inspect

Layout/ParameterAlignment:
  Description: >-
    Align the parameters of a method call if they span more
    than one line.
  Enabled: true
  EnforcedStyle: with_first_parameter

# would like to ignore `and return`: https://github.com/bbatsov/rubocop/issues/1288
Style/AndOr:
  Description: "Use &&/|| instead of and/or."
  Enabled: true

# Checks if usage of %() or %Q() matches configuration.
Style/BarePercentLiterals:
  Enabled: true
  EnforcedStyle: bare_percent

Style/ArrayJoin:
  Description: "Use Array#join instead of Array#*."
  Enabled: true

Style/AsciiComments:
  Description: "Use only ascii symbols in comments."
  Enabled: false

Naming/AsciiIdentifiers:
  Description: "Use only ascii symbols in identifiers."
  Enabled: true

Style/Attr:
  Description: "Checks for uses of Module#attr."
  Enabled: false

Style/BeginBlock:
  Description: "Avoid the use of BEGIN blocks."
  Enabled: true

Style/BlockComments:
  Description: "Do not use block comments."
  Enabled: true

Layout/BlockEndNewline:
  Description: "Put end statement of multiline block on its own line."
  Enabled: false

Style/CaseEquality:
  Description: "Avoid explicit use of the case equality operator(===)."
  Enabled: true

Layout/CaseIndentation:
  Description: "Indentation of when in a case/when/[else/]end."
  Enabled: true
  EnforcedStyle: case
  IndentOneStep: false

Style/CharacterLiteral:
  Description: "Checks for uses of character literals."
  Enabled: true

Naming/ClassAndModuleCamelCase:
  Description: "Use CamelCase for classes and modules."
  Enabled: true

Style/ClassAndModuleChildren:
  Description: "Checks style of children classes and modules."
  Enabled: false
  EnforcedStyle: nested

Style/ClassCheck:
  Description: "Enforces consistent use of `Object#is_a?` or `Object#kind_of?`."
  Enabled: false
  EnforcedStyle: is_a?

Style/ClassMethods:
  Description: "Use self when defining module/class methods."
  Enabled: true

Style/ClassVars:
  Description: "Avoid the use of class variables."
  Enabled: true

Style/CollectionMethods:
  Description: "Preferred collection methods."
  Enabled: false
  PreferredMethods:
    find: detect
    reduce: inject
    collect: map
    collect!: "map!"
    find_all: select

Style/ColonMethodCall:
  Description: "Do not use :: for method call."
  Enabled: true

Style/CommentAnnotation:
  Description: >-
    Checks formatting of special comments
    (TODO, FIXME, OPTIMIZE, HACK, REVIEW).
  Enabled: true
  Keywords:
    - TODO
    - FIXME
    - OPTIMIZE
    - HACK
    - REVIEW

Layout/CommentIndentation:
  Description: "Indentation of comments."
  Enabled: false

Style/ConditionalAssignment:
  Description: "Check for `if` and `case` statements where each branch is used for assignment to the same variable when using the return of the condition can be used instead."
  Enabled: false

Naming/ConstantName:
  Description: "Constants should use SCREAMING_SNAKE_CASE."
  Enabled: true

Style/DefWithParentheses:
  Description: "Use def with parentheses when there are arguments."
  Enabled: true

Style/Documentation:
  Description: "Document classes and non-namespace modules."
  Enabled: false

Layout/DotPosition:
  Description: "Checks the position of the dot in multi-line method calls."
  Enabled: true
  EnforcedStyle: trailing

Style/DoubleNegation:
  Description: "Checks for uses of double negation (!!)."
  Enabled: true

Style/EachWithObject:
  Description: "Prefer `each_with_object` over `inject` or `reduce`."
  Enabled: false

Layout/EmptyLineBetweenDefs:
  Description: "Use empty lines between defs."
  Enabled: true
  AllowAdjacentOneLineDefs: true

Layout/EmptyLines:
  Description: "Don't use several empty lines in a row."
  Enabled: true

Layout/EmptyLinesAroundAccessModifier:
  Description: "Keep blank lines around access modifiers."
  Enabled: true

Style/EmptyLiteral:
  Description: "Prefer literals to Array.new/Hash.new/String.new."
  Enabled: false

Style/Encoding:
  Description: "Use UTF-8 as the source file encoding."
  Enabled: true

Style/EndBlock:
  Description: "Avoid the use of END blocks."
  Enabled: true

Layout/EndOfLine:
  Description: "Use Unix-style line endings."
  Enabled: true

Style/EvenOdd:
  Description: "Favor the use of Fixnum#even? && Fixnum#odd?"
  Enabled: false

Naming/FileName:
  Description: "Use snake_case for source file names."
  Enabled: true
  # allow these specific filenames in any engine/gem
  Exclude:
    - "**/Rakefile"
    - "**/Gemfile"

Lint/FlipFlop:
  Description: "Checks for flip flops"
  Enabled: true

Style/For:
  Description: "Checks use of for or each in multiline loops."
  Enabled: true
  EnforcedStyle: each

# We'd like to exclude String#% here
Style/FormatString:
  Description: "Enforce the use of Kernel#sprintf, Kernel#format or String#%."
  Enabled: false
  EnforcedStyle: format

Style/FrozenStringLiteralComment:
  Enabled: false

Style/GlobalVars:
  Description: "Do not introduce global variables."
  Enabled: true
  AllowedVariables: []

Style/GuardClause:
  Description: "Check for conditionals that can be replaced with guard clauses"
  Enabled: true
  MinBodyLength: 1

Style/HashSyntax:
  Enabled: true
  EnforcedStyle: ruby19_no_mixed_keys

Style/IfUnlessModifier:
  Description: >-
    Favor modifier if/unless usage when you have a
    single-line body.
  Enabled: true

Style/IfWithSemicolon:
  Description: "Never use if x; .... Use the ternary operator instead."
  Enabled: true

Layout/IndentationConsistency:
  Description: "Keep indentation straight."
  Enabled: true

Layout/IndentationWidth:
  Description: "Use 2 spaces for indentation."
  Enabled: true

Layout/FirstArrayElementIndentation:
  Description: >-
    Checks the indentation of the first element in an array
    literal.
  Enabled: true
  EnforcedStyle: consistent

Layout/FirstHashElementIndentation:
  Description: "Checks the indentation of the first key in a hash literal."
  Enabled: true
  EnforcedStyle: consistent

Style/Lambda:
  Description: "Use the new lambda literal syntax for single-line blocks."
  Enabled: false

Style/LambdaCall:
  Description: "Use lambda.call(...) instead of lambda.(...)."
  Enabled: false
  EnforcedStyle: call

Layout/LeadingCommentSpace:
  Description: "Comments should start with a space."
  Enabled: true

Style/LineEndConcatenation:
  Description: >-
    Use \ instead of + or << to concatenate two string literals at
    line end.
  Enabled: false

Style/MethodCallWithoutArgsParentheses:
  Description: "Do not use parentheses for method calls with no arguments."
  Enabled: true

Style/MethodDefParentheses:
  Description: >-
    Checks if the method definitions have or don't have
    parentheses.
  Enabled: true
  EnforcedStyle: require_parentheses

Naming/MethodName:
  Description: "Use the configured style when naming methods."
  Enabled: true
  EnforcedStyle: snake_case

Style/ModuleFunction:
  Description: "Checks for usage of `extend self` in modules."
  Enabled: true

Style/MultilineBlockChain:
  Description: "Avoid multi-line chains of blocks."
  Enabled: true

Style/MultilineIfThen:
  Description: "Never use then for multi-line if/unless."
  Enabled: true

Style/MultilineTernaryOperator:
  Description: >-
    Avoid multi-line ?: (the ternary operator);
    use if/unless instead.
  Enabled: true

Style/NegatedIf:
  Description: >-
    Favor unless over if for negative conditions
    (or control flow or).
  Enabled: true

Style/NegatedWhile:
  Description: "Favor until over while for negative conditions."
  Enabled: true

Style/NestedTernaryOperator:
  Description: "Use one expression per branch in a ternary operator."
  Enabled: true

Style/Next:
  Description: "Use `next` to skip iteration instead of a condition at the end."
  Enabled: false
  MinBodyLength: 3
  EnforcedStyle: skip_modifier_ifs

Style/NilComparison:
  Description: "Prefer x.nil? to x == nil."
  Enabled: true

Style/NonNilCheck:
  Description: "Checks for redundant nil checks."
  Enabled: true
  IncludeSemanticChanges: false

Style/Not:
  Description: "Use ! instead of not."
  Enabled: true

Style/NumericLiterals:
  Description: >-
    Add underscores to large numeric literals to improve their
    readability.
  Enabled: true
  MinDigits: 5

Style/OneLineConditional:
  Description: >-
    Favor the ternary operator(?:) over
    if/then/else/end constructs.
  Enabled: true

Style/OptionalArguments:
  Description: "This cop checks for optional arguments to methods that do not come at the end of the argument list"
  Enabled: true

Naming/BinaryOperatorParameterName:
  Description: "When defining binary operators, name the argument other."
  Enabled: true

Style/ParenthesesAroundCondition:
  Description: >-
    Don't use parentheses around the condition of an
    if/unless/while.
  Enabled: true
  AllowSafeAssignment: true

Style/PercentLiteralDelimiters:
  Description: "Use `%`-literal delimiters consistently"
  Enabled: false
  PreferredDelimiters:
    "%": "{}"
    # '%i': ()
    # '%q': ()
    # '%Q': ()
    # '%r': '{}'
    # '%s': ()
    # '%w': ()
    # '%W': ()
    # '%x': ()

Style/PercentQLiterals:
  Enabled: false
  EnforcedStyle: lower_case_q

Style/PerlBackrefs:
  Description: "Avoid Perl-style regex back references."
  Enabled: true

Naming/PredicateName:
  Description: "Check the names of predicate methods."
  Enabled: true
  ForbiddenPrefixes:
    - is_
    - does_
    - can_

Style/PreferredHashMethods:
  Description: "Check for usage of has_key? versus key? methods."
  Enabled: true
  EnforcedStyle: verbose

Style/Proc:
  Description: "Use proc instead of Proc.new."
  Enabled: true

Style/RaiseArgs:
  Description: "Checks the arguments passed to raise/fail."
  Enabled: true
  EnforcedStyle: exploded

Style/RedundantBegin:
  Description: "Don't use begin blocks when they are not needed."
  Enabled: true

Style/RedundantException:
  Description: "Checks for an obsolete RuntimeException argument in raise/fail."
  Enabled: true

Style/RedundantReturn:
  Description: "Don't use return where it's not required."
  # there are cases where adding more lines in a method change what it returns, especially with chained methods.
  # want to allow explicit 'return' keyword to make it clearer when the last line's return value is important.
  Enabled: false
  # When true allows code like `return x, y`.
  AllowMultipleReturnValues: false

Style/RedundantSelf:
  Description: "Don't use self where it's not needed."
  Enabled: true

Style/RegexpLiteral:
  Description: >-
    Use %r for regular expressions matching more than
    `MaxSlashes` '/' characters.
    Use %r only for regular expressions matching more than
    `MaxSlashes` '/' character.
  Enabled: true

Style/RescueModifier:
  Description: "Avoid using rescue in its modifier form."
  Enabled: true

Style/SelfAssignment:
  Description: "Checks for places where self-assignment shorthand should have been used."
  Enabled: true

Style/Semicolon:
  Description: "Don't use semicolons to terminate expressions."
  Enabled: true
  # Allow ; to separate several expressions on the same line.
  AllowAsExpressionSeparator: true

Style/SignalException:
  Description: "Checks for proper usage of fail and raise."
  Enabled: true
  EnforcedStyle: only_raise

Style/SingleLineBlockParams:
  Description: "Enforces the names of some block params."
  Enabled: false
  Methods:
    - reduce:
        - a
        - e
    - inject:
        - a
        - e

Style/SingleLineMethods:
  Description: "Avoid single-line methods."
  Enabled: true
  AllowIfMethodIsEmpty: true

Layout/SpaceBeforeFirstArg:
  Description: >-
    Checks that exactly one space is used between a method name
    and the first argument for method calls without parentheses.
  Enabled: true

Layout/SpaceAfterColon:
  Description: "Use spaces after colons."
  Enabled: true

Layout/SpaceAfterComma:
  Description: "Use spaces after commas."
  Enabled: true

Layout/SpaceAroundKeyword:
  Description: "Use spaces around if/elsif/unless/while/until/case/when etc."
  Enabled: true

Layout/SpaceAfterMethodName:
  Description: >-
    Never put a space between a method name and the opening
    parenthesis in a method definition.
  Enabled: true

Layout/SpaceAfterNot:
  Description: Tracks redundant space after the ! operator.
  Enabled: true

Layout/SpaceAfterSemicolon:
  Description: "Use spaces after semicolons."
  Enabled: true

Layout/SpaceBeforeBlockBraces:
  Description: >-
    Checks that the left block brace has or doesn't have space
    before it.
  Enabled: true
  EnforcedStyle: space

Layout/SpaceBeforeComma:
  Description: "No spaces before commas."
  Enabled: true

Layout/SpaceBeforeComment:
  Description: >-
    Checks for missing space between code and a comment on the
    same line.
  Enabled: true

Layout/SpaceBeforeSemicolon:
  Description: "No spaces before semicolons."
  Enabled: true

Layout/SpaceInsideBlockBraces:
  Description: >-
    Checks that block braces have or don't have surrounding space.
    For blocks taking parameters, checks that the left brace has
    or doesn't have trailing space.
  Enabled: true
  EnforcedStyle: space
  EnforcedStyleForEmptyBraces: no_space
  # Space between { and |. Overrides EnforcedStyle if there is a conflict.
  SpaceBeforeBlockParameters: true

Layout/SpaceAroundEqualsInParameterDefault:
  Description: >-
    Checks that the equals signs in parameter default assignments
    have or don't have surrounding space depending on
    configuration.
  Enabled: false
  EnforcedStyle: no_space

Layout/SpaceAroundOperators:
  Description: "Use spaces around operators."
  Enabled: true

Layout/SpaceInsideArrayLiteralBrackets:
  Enabled: true

Layout/SpaceInsideReferenceBrackets:
  Enabled: true

Layout/SpaceInsideHashLiteralBraces:
  Description: "Use spaces inside hash literal braces - or don't."
  Enabled: false
  EnforcedStyle: no_space
  EnforcedStyleForEmptyBraces: no_space

Layout/SpaceInsideParens:
  Description: "No spaces after ( or before )."
  Enabled: true

Style/SpecialGlobalVars:
  Description: "Avoid Perl-style global variables."
  Enabled: true

Style/StringLiterals:
  Description: "Checks if uses of quotes match the configured preference."
  Enabled: false
  EnforcedStyle: double_quotes

Style/QuotedSymbols:
  Description: "Checks if uses of quotes match the configured preference."
  Enabled: false

Layout/IndentationStyle:
  Description: "This cop checks that the indentation method is consistent. (default is spaces)"
  Enabled: true

Layout/TrailingEmptyLines:
  Description: "Checks trailing blank lines and final newline."
  Enabled: true
  EnforcedStyle: final_newline

Layout/TrailingWhitespace:
  Description: "Avoid trailing whitespace."
  Enabled: true

Style/TrailingCommaInArrayLiteral:
  EnforcedStyleForMultiline: comma

Style/TrailingCommaInHashLiteral:
  EnforcedStyleForMultiline: comma

Style/TrailingCommaInArguments:
  EnforcedStyleForMultiline: no_comma

Style/TrivialAccessors:
  Description: "Prefer attr_* methods to trivial readers/writers."
  Enabled: true
  ExactNameMatch: false
  AllowPredicates: false
  # Allows trivial writers that don't end in an equal sign. e.g.
  #
  # def on_exception(action)
  #   @on_exception=action
  # end
  # on_exception :restart
  #
  # Commonly used in DSLs
  AllowDSLWriters: false
  AllowedMethods:
    - to_ary
    - to_a
    - to_c
    - to_enum
    - to_h
    - to_hash
    - to_i
    - to_int
    - to_io
    - to_open
    - to_path
    - to_proc
    - to_r
    - to_regexp
    - to_str
    - to_s
    - to_sym

Style/UnlessElse:
  Description: >-
    Never use unless with else. Rewrite these with the positive
    case first.
  Enabled: true

Style/RedundantCapitalW:
  Description: "Checks for %W when interpolation is not needed."
  Enabled: true

Style/RedundantPercentQ:
  Description: "Checks for %q/%Q when single quotes or double quotes would do."
  Enabled: true

Style/VariableInterpolation:
  Description: >-
    Don't interpolate global, instance and class variables
    directly in strings.
  Enabled: false

Naming/VariableName:
  Description: "Use the configured style when naming variables."
  Enabled: true
  EnforcedStyle: snake_case

Style/WhenThen:
  Description: "Use when x then ... for one-line cases."
  Enabled: true

Style/WhileUntilDo:
  Description: "Checks for redundant do after while or until."
  Enabled: true

Style/WhileUntilModifier:
  Description: >-
    Favor modifier while/until usage when you have a
    single-line body.
  Enabled: true

Style/WordArray:
  Description: "Use %w or %W for arrays of words."
  Enabled: false
  MinSize: 0

Style/InlineComment:
  Description: "Avoid inline comments."
  Enabled: false

Style/MethodCalledOnDoEndBlock:
  Description: "Avoid chaining a method call on a do...end block."
  Enabled: false

Style/SymbolArray:
  Description: "Use %i or %I for arrays of symbols."
  Enabled: false

Style/HashEachMethods:
  Enabled: false

Style/HashTransformKeys:
  Enabled: false

Style/HashTransformValues:
  Enabled: false

#################### Metrics ################################

Metrics/AbcSize:
  Enabled: true
  Max: 19

Metrics/BlockLength:
  CountComments: false
  Max: 25
  # this is a special exclude based on FILENAME so it'll work everywhere.
  Exclude:
    - "**/*_spec.rb"

Metrics/BlockNesting:
  Description: "Avoid excessive block nesting"
  Enabled: true
  Max: 3

Metrics/ClassLength:
  Description: "Avoid classes longer than 100 lines of code."
  Enabled: false
  CountComments: false

Metrics/CyclomaticComplexity:
  Description: >-
    A complexity metric that is strongy correlated to the number
    of test cases needed to validate a method.
  Enabled: false
  Max: 20 # default 6

Layout/LineLength:
  Description: "Limit lines to 200 characters."
  Enabled: false
  Max: 200

Metrics/MethodLength:
  CountAsOne: ["array", "hash"]
  CountComments: false
  Enabled: true
  Max: 15

Metrics/ModuleLength:
  Max: 500

Metrics/ParameterLists:
  Description: "Avoid parameter lists longer than three or four parameters."
  Enabled: true
  Max: 5
  CountKeywordArgs: true

Metrics/PerceivedComplexity:
  Description: >-
    A complexity metric geared towards measuring complexity for a
    human reader.
  Enabled: true
  Max: 19 # default 7

#################### Lint ################################
### Warnings

Lint/AmbiguousOperator:
  Description: >-
    Checks for ambiguous operators in the first argument of a
    method invocation without parentheses.
  Enabled: false

Lint/AmbiguousRegexpLiteral:
  Description: >-
    Checks for ambiguous regexp literals in the first argument of
    a method invocation without parenthesis.
  Enabled: true

Lint/AssignmentInCondition:
  Description: "Don't use assignment in conditions."
  Enabled: true
  AllowSafeAssignment: true

Layout/BlockAlignment:
  Description: "Align block ends correctly."
  Enabled: true

Layout/ConditionPosition:
  Description: "Checks for condition placed in a confusing position relative to the keyword."
  Enabled: false

Lint/Debugger:
  Description: "Check for debugger calls."
  Enabled: true

Layout/DefEndAlignment:
  Description: "Align ends corresponding to defs correctly."
  Enabled: true
  # The value `def` means that `end` should be aligned with the def keyword.
  # The value `start_of_line` means that `end` should be aligned with method
  # calls like `private`, `public`, etc, if present in front of the `def`
  # keyword on the same line.
  EnforcedStyleAlignWith: start_of_line

Lint/DeprecatedClassMethods:
  Description: "Check for deprecated class method calls."
  Enabled: true

Lint/ElseLayout:
  Description: "Check for odd code arrangement in an else block."
  Enabled: true

Lint/EmptyEnsure:
  Description: "Checks for empty ensure block."
  Enabled: true

Lint/EmptyInterpolation:
  Description: "Checks for empty string interpolation."
  Enabled: true

Layout/EndAlignment:
  Description: "Align ends correctly."
  Enabled: true
  EnforcedStyleAlignWith: keyword

Lint/EnsureReturn:
  Description: "Never use return in an ensure block."
  Enabled: true

Lint/SuppressedException:
  Description: "Don't suppress exception."
  Enabled: true

Lint/LiteralAsCondition:
  Description: "Checks of literals used in conditions."
  Enabled: true

Lint/LiteralInInterpolation:
  Description: "Checks for literals used in interpolation."
  Enabled: true

Lint/Loop:
  Description: >-
    Use Kernel#loop with break rather than begin/end/until or
    begin/end/while for post-loop tests.
  Enabled: true

Lint/ParenthesesAsGroupedExpression:
  Description: >-
    Checks for method calls with a space before the opening
    parenthesis.
  Enabled: true

Lint/RequireParentheses:
  Description: >-
    Use parentheses in the method call to avoid confusion
    about precedence.
  Enabled: true

Lint/RescueException:
  Description: "Avoid rescuing the Exception class."
  Enabled: true

Lint/ShadowingOuterLocalVariable:
  Description: >-
    Do not use the same name as outer local variable
    for block arguments or block local variables.
  Enabled: true

Lint/RedundantStringCoercion:
  Description: "Checks for Object#to_s usage in string interpolation."
  Enabled: true

Lint/UnderscorePrefixedVariableName:
  Description: "Do not use prefix `_` for a variable that is used."
  Enabled: true

Lint/UnusedBlockArgument:
  Description: "Checks for unused block arguments."
  Enabled: true

Lint/UnusedMethodArgument:
  Description: "Checks for unused method arguments."
  Enabled: true

Lint/UnreachableCode:
  Description: "Unreachable code."
  Enabled: true

Lint/UselessAccessModifier:
  Description: "Checks for useless access modifiers."
  Enabled: true

Lint/UselessAssignment:
  Description: "Checks for useless assignment to a local variable."
  Enabled: true

Lint/BinaryOperatorWithIdenticalOperands:
  Description: "Checks for comparison of something with itself."
  Enabled: true

Lint/UselessElseWithoutRescue:
  Description: "Checks for useless `else` in `begin..end` without `rescue`."
  Enabled: true

Lint/UselessSetterCall:
  Description: "Checks for useless setter call to a local variable."
  Enabled: true

Lint/Void:
  Description: "Possible use of operator/literal/variable in void context."
  Enabled: true

Lint/RaiseException:
  Description: >-
    This cop checks for raise or fail statements which are raising Exception class.
    You can specify a module name that will be an implicit namespace using AllowedImplicitNamespaces option. The cop
    cause a false positive for namespaced Exception when a namespace is omitted. This option can prevent the false
    positive by specifying a namespace to be omitted for Exception. Alternatively, make Exception a fully qualified
    class name with an explicit namespace.
  Enabled: false

Lint/StructNewOverride:
  Description: "This cop checks unexpected overrides of the Struct built-in methods via Struct.new."
  Enabled: true

Security/Eval:
  Description: "The use of eval represents a serious security risk."
  Enabled: true

##################### RSpec cops ##################################

RSpec/Capybara/FeatureMethods:
  Enabled: false

RSpec/BeforeAfterAll:
  Enabled: false

RSpec/ContextWording:
  Prefixes:
    - when
    - When
    - with
    - With
    - without
    - Without
    - if
    - If
    - given
    - Given

RSpec/DescribedClass:
  Enabled: false

RSpec/ExampleLength:
  Max: 30

# allow it blocks to start with "should".
RSpec/ExampleWording:
  Enabled: false

RSpec/ExpectChange:
  Enabled: false

RSpec/FilePath:
  Enabled: false
  CustomTransform:
    RuboCop: rubocop
    RSpec: rspec
    GraphQL: graphql

RSpec/HookArgument:
  EnforcedStyle: each

RSpec/ImplicitExpect:
  EnforcedStyle: is_expected

RSpec/ImplicitSubject:
  EnforcedStyle: single_line_only

RSpec/MultipleMemoizedHelpers:
  Max: 15

RSpec/MessageSpies:
  EnforcedStyle: receive

RSpec/MultipleExpectations:
  Max: 5

# we've seen surprising scope issues with named subjects, turn this off for now
RSpec/NamedSubject:
  Enabled: false

RSpec/NestedGroups:
  Max: 7

RSpec/NotToNot:
  EnforcedStyle: to_not

RSpec/PredicateMatcher:
  EnforcedStyle: inflected
  Strict: true

RSpec/ReturnFromStub:
  EnforcedStyle: and_return

# Style/DisableCopsWithinSourceCodeDirective

Style/ExponentialNotation:
  Enabled: false
# RuboCop 0.83

Style/SlicingWithRange:
  Description: "This cop checks that arrays are sliced with endless ranges instead of ary[start..-1] on Ruby 2.6+."
  Enabled: false # (Required Ruby version: 2.6)

Lint/ConstantResolution:
  Description: >-
    Check that certain constants are fully qualified.
    This is not enabled by default because it would mark a lot of offenses unnecessarily.
    Generally, gems should fully qualify all constants to avoid conflicts with the code that uses the gem. Enable this cop without using Only/Ignore
    Large projects will over time end up with one or two constant names that are problematic because of a conflict with a library or just internally
    using the same name a namespace and a class. To avoid too many unnecessary offenses, Enable this cop with Only: [The, Constant, Names, Causing, Issues]
  Enabled: false

# RuboCop 0.88
Style/ArrayCoercion:
  Description: >-
    This cop enforces the use of Array() instead of explicit Array check or [*var].
    This cop is disabled by default because false positive will occur if the argument of Array() is not an array (e.g. Hash, Set), an array will be
    returned as an incompatibility result.
  Enabled: false

Lint/OutOfRangeRegexpRef:
  Description: This cops looks for references of Regexp captures that are out of range and thus always returns nil.
  Enabled: false
